b2$tier = a2$tier[match(b2$X4,a2$X4)]
b3 =  aggregate(X8~dist+tier+ctcf_peak,b2,median)
b3p = b3
b3p$X8[b3p$X8>20] = 20
hervh = a2[grep("chr",a2$X4)[1:50],]
herv.di = b[which(b$X4 %in% hervh$X4),]
herv.di.agg =  aggregate(X8~dist,herv.di,median)
herv.di.agg$tier = -1
herv.di.agg$ctcf_peak = FALSE
b4 = rbind(b3p, herv.di.agg)
ggplot(subset(b4,abs(dist)<=20)) + geom_tile(aes(x=dist,y=tier,fill=X8)) +
scale_fill_gradient2(high="red",low="darkblue") + facet_wrap(~ctcf_peak)
ggplot(hervh) +geom_bar(aes(tier)) + coord_flip()
ggplot(subset(b4,abs(dist)<=20)) + geom_tile(aes(x=dist,y=tier,fill=X8)) +
scale_fill_gradient2(high="red",low="darkblue") + facet_wrap(~ctcf_peak)
ggplot(hervh) +geom_bar(aes(tier)) + coord_flip()
ggplot(a2) +geom_bar(aes(tier,ctcf_peak)) + coord_flip()
ggplot(a2) +geom_bar(aes(tier,ctcf_peak),stat="identity",position="fill") + coord_flip()
head(a2)
ggplot(a2) +geom_bar(aes(tier,color=ctcf_peak),stat="identity",position="fill") + coord_flip()
ggplot(a2) +geom_bar(aes(y=tier,color=ctcf_peak),stat="identity",position="fill") + coord_flip()
ggplot(a2) +geom_bar(aes(tier,fill=ctcf_peak),stat="identity",position="fill") + coord_flip()
ggplot(a2) +geom_bar(aes(tier,X1,fill=ctcf_peak),stat="identity",position="fill") + coord_flip()
ggplot(a2) +geom_bar(aes(x=tier,y=tier,fill=ctcf_peak),stat="identity",position="fill") + coord_flip()
table(a2$tier,a2$ctcf_peak)
ggplot(a2) +geom_bar(aes(x=tier,fill=ctcf_peak),stat="count",position="fill") + coord_flip()
pdf("figures/gene_TSS_DI_profile.rank_by_exp.pdf")
ggplot(subset(b4,abs(dist)<=20)) + geom_tile(aes(x=dist,y=tier,fill=X8)) +
scale_fill_gradient2(high="red",low="darkblue") + facet_wrap(~ctcf_peak)
ggplot(hervh) +geom_bar(aes(tier)) + coord_flip()
ggplot(a2) +geom_bar(aes(x=tier,fill=ctcf_peak),stat="count",position="fill") + coord_flip()
dev.off()
head(a2)
rpkm.agg = aggregate(X7~tier,a2)
rpkm.agg = aggregate(X7~tier,a2,median)
rpkm.agg
ggplot2(rpkm.agg) + geom_bar(x=tier,y=X7)+ coord_flip()
ggplot(rpkm.agg) + geom_bar(x=tier,y=X7)+ coord_flip()
rpkm.agg = aggregate(X7~tier,a2,median)
rpkm.agg
ggplot(rpkm.agg) + geom_bar(x=tier,y=X7)+ coord_flip()
ggplot(rpkm.agg) + geom_bar(aes(x=tier,y=X7)+ coord_flip()
ggplot(rpkm.agg) + geom_bar(aes(x=tier,y=X7))+ coord_flip()
dev.off()
ggplot(rpkm.agg) + geom_bar(aes(x=tier,y=X7))+ coord_flip()
ggplot(rpkm.agg) + geom_bar(aes(x=tier,y=X7))+ coord_flip()
ggplot(a2) +geom_bar(aes(x=tier,fill=ctcf_peak),stat="count",position="fill") + coord_flip()
ggplot(rpkm.agg) + geom_bar(aes(x=tier,y=X7))+ coord_flip()
ggplot(rpkm.agg) + geom_col(aes(x=tier,y=X7))+ coord_flip()
ggplot(rpkm.agg) + geom_col(aes(x=tier,y=X7))+
xlab("Tier") + ylab("RPKM")
ggplot(rpkm.agg) + geom_col(aes(x=tier,y=X7))+
xlab("Tier") + ylab("RPKM") +
coord_flip()
pdf("figures/gene_TSS_DI_profile.rank_by_exp.pdf")
ggplot(subset(b4,abs(dist)<=20)) + geom_tile(aes(x=dist,y=tier,fill=X8)) +
scale_fill_gradient2(high="red",low="darkblue") + facet_wrap(~ctcf_peak)
ggplot(hervh) +geom_bar(aes(tier)) + coord_flip()
ggplot(a2) +geom_bar(aes(x=tier,fill=ctcf_peak),stat="count",position="fill") + coord_flip()
ggplot(rpkm.agg) + geom_col(aes(x=tier,y=X7))+
xlab("Tier") + ylab("RPKM") +
coord_flip()
dev.off()
a=read_delim("D00.rna_seq.ranked_by_rpkm.v2.bed",delim="\t",col_names=F)
a2 = a[which(a$X7>0),]
a2$tier = floor(1:nrow(a2)/1000)
c = read_delim("all_genes.TESs.dist.CTCF_peaks.txt",delim="\t",col_names=F)
a2$ctcf_distance = c$X16[match(a2$X4,c$X4)]
a2$ctcf_peak = a2$ctcf_distance < 2e4
## TSS plot
b = read_delim("tss_DI_profile/all_gene.TES.DI.overlap.D00_HiC_Rep1.txt",delim="\t",col_names=F)
b$dist = ceiling((b$X6-b$X3)/10000)+40
b2 = b[which(b$X4 %in% a2$X4),]
b2$tier = a2$tier[match(b2$X4,a2$X4)]
b2$ctcf_peak = a2$ctcf_peak[match(b2$X4,a2$X4)]
b3 =  aggregate(X8~dist+tier+ctcf_peak,b2,median)
b3p = b3
b3p$X8[b3p$X8>20] = 20
hervh = a2[grep("chr",a2$X4)[1:50],]
herv.di = b[which(b$X4 %in% hervh$X4),]
herv.di.agg =  aggregate(X8~dist,herv.di,median)
herv.di.agg$tier = -1
herv.di.agg$ctcf_peak = FALSE
b4 = rbind(b3p, herv.di.agg)
rpkm.agg = aggregate(X7~tier,a2,median)
pdf("figures/gene_TES_DI_profile.rank_by_exp.pdf")
ggplot(subset(b4,abs(dist)<=20)) + geom_tile(aes(x=dist,y=tier,fill=X8)) +
scale_fill_gradient2(high="red",low="darkblue") + facet_wrap(~ctcf_peak)
ggplot(hervh) +geom_bar(aes(tier)) + coord_flip()
ggplot(a2) +geom_bar(aes(x=tier,fill=ctcf_peak),stat="count",position="fill") + coord_flip()
ggplot(rpkm.agg) + geom_col(aes(x=tier,y=X7))+
xlab("Tier") + ylab("RPKM") +
coord_flip()
dev.off()
a=read.delim("D00.rna_seq.ranked_by_rpkm.v2.bed")
head(a)
a=read.delim("D00.rna_seq.ranked_by_rpkm.v2.bed",header=F)
head(a)
a = a[grep("chr",a$V4),]
dim(a)
head(a)
length(which(a$V7>0))
table(a$V7>0)
table(a$V7>1)
head(a)
a[200:210,]
head(a)
# leave only HERVH expression RPKM >1.
a2 = a[which(a$V7 >=1),]
dim(a2)
head(a2)
# sort the peak location wrt to chromosome and location
a2$loc = floor(a2$V2/1e4) * 1e4
head(a2)
a3 = a2[,c(1,8)]
a3$V1 = factor(a3$V1, levels=paste0("chr",c(1:22,"X")))
a3 = a3[order(a3$V1,a3$loc),]
a3
dim(a3)
head(a3)
out_dict = list()
for (i in 1:nrow(a3)){
print(i)
for (j in (i+1):nrow(a3)) {
print(j)
out_dict[[len(out_dict)+1]]  = cbind(a3[i,],a3[j,])
}
}
out_dict = list()
for (i in 1:nrow(a3)){
print(i)
for (j in (i+1):nrow(a3)) {
print(j)
out_dict[[length(out_dict)+1]]  = cbind(a3[i,],a3[j,])
}
}
length(out_dict)
7383*2
dim(a3)
122**2
out = do.call(rbind, out_dict)
head(out)
colnames(out) = c("chr1","x1","chr2","y1")
out$x2 = out$x1+1e4
out$y2 = out$y1+1e4
head(out)
out = out[,c(1,2,5,3,4,6)]
head(out
)
write.table("inter_chrom_int/hervh.pairs.rpkm_gt1.txt")
write.table(out,"inter_chrom_int/hervh.pairs.rpkm_gt1.txt",row.names=F,sep="\t",quote=F)
write.table(out,"inter_chrom_int/hervh.pairs.rpkm_gt1.txt",row.names=F,sep="\t",quote=F)
table(out$chr1==out$chr2)
a=read_delim("inter_chrom_int/hervh.pairs.rpkm_gt1.txt")
a=read_delim("inter_chrom_int/hervh.pairs.rpkm_gt1.txt",delim="\t")
a
chr1=1
chr2=2
chr_list[[chr1]][[chr2]] = read_delim(paste0("inter_chrom_int/D00_HiC_Rep1/chr.",chr1,".",chr2,".10k.mat"))
chr_list[[chr1]][[chr2]] = read_delim(paste0("inter_chrom_int/D00_HiC_Rep1/chr.",chr1,".",chr2,".10k.mat"),delim="\t")
chr_list = list()
for (chr1 in c(1:22)) {
chr_list[[chr1]] = list()
for (chr2 in c(chr1:22,X)) {
chr_list[[chr1]][[chr2]] = read_delim(paste0("inter_chrom_int/D00_HiC_Rep1/chr.",chr1,".",chr2,".10k.mat"),delim="\t")
}
}
for (chr2 in c(chr1:22,"X")) {
chr_list[[chr1]][[chr2]] = read_delim(paste0("inter_chrom_int/D00_HiC_Rep1/chr.",chr1,".",chr2,".10k.mat"),delim="\t")
}
head(chr_list[[1]][[2]])
chr_list[[chr1]][[chr2]] = read_delim(paste0("inter_chrom_int/D00_HiC_Rep1/chr.",chr1,".",chr2,".10k.mat"),delim="\t",col_names=F)
chr1
chr2
for (chr1 in c(1:22)) {
print(chr1)
}
chr_list = list()
for (chr1 in c(1:22)) {
chr_list[[chr1]] = list()
for (chr2 in c(chr1:22,"X")) {
chr_list[[chr1]][[chr2]] = read_delim(paste0("inter_chrom_int/D00_HiC_Rep1/chr.",chr1,".",chr2,".10k.mat"),delim="\t",col_names=F)
}
}
head(a)
i=1
x1 = a[i,2]
x2 = a[i,4]
mat = chr_list[[ a[,1] ]][[ a[,4] ]]
mat = chr_list[[ a[i,1] ]][[ a[i,4] ]]
i
a[i,1]
a[i,2]
a[i,4]
chr_list[[ a[i,1] ]][[ a[i,4] ]]
chr_list[[ a[i,1] ]]
chr_list
chr_list[[1]][[2]]
head(a)
chr1 = sub("chr","",a[i,1])
chr2 = sub("chr","",a[i,4])
chr1
mat = chr_list[[ chr1 ]][[ chr2 ]]
head(mat)
chr_list[[chr1]]
chr1 = as.numeric(sub("chr","",a[i,1]))
chr2 = as.numeric(sub("chr","",a[i,4]))
mat = chr_list[[ chr1 ]][[ chr2 ]]
mat
tmp = mat %>% filter ( (X1 < x1+5000 ) & (X1 > x1-5000) & (X2 < x2+5000 ) & (X1 > x2-5000))
x1
X1
x1
x1+5000
x1+5000
x1-5000
mat %>% filter ( (X1 < x1+5000 )
)
mat %>% filter ( (X1 < x1+5000 ) & (X1 > x1-5000))
x1
chr1
chr2
tmp = mat %>% filter ( (X1 < x1+50000 ) & (X1 > x1-50000) & (X2 < x2+50000 ) & (X1 > x2-50000))
mat %>% filter ( (X1 < x1+50000 ) & (X1 > x1-50000))
mat %>% filter ( (X1 < x1+50000 ))
mat %>% filter ( X1 < x1+50000 & X1 > x1-50000)
x1-50000
head(a)
mat %>% filter ( X1 < x1+50000 & X1 > -50000)
mat %>% filter ( X1 < x1+50000 & X1 > 50000)
mat %>% filter ( X1 < x1+50000 )
mat %>% filter ( X1 < x1+50000 & X1 > 50000)
x1
mat %>% filter ( X1 < x1+50000 & X1 > 0)
mat %>% filter ( ( X1 < x1+50000 ) & X1 > 0)
mat %>% filter ( ( X1 < x1+50000 )) %>% filter( X1 >0)
mat %>% filter ( ( X1 < x1+50000 )) %>% filter( X1 > x1-50000)
mat %>% filter ( ( X1 < x1+50000 )) %>% filter( X1 > -50000)
x1
x1-50000
mat %>% filter ( ( X1 < x1+50000 )) %>% filter( X1 > 32840000)
mat$x1
tmp = mat[which(mat$X1 < x1+50000 ) & (mat$X1 > x1-50000)),]
tmp = mat[which((mat$X1 < x1+50000 ) & (mat$X1 > x1-50000)),]
dim(tmp)
tmp
head(amt)
head(mat)
max(mat$X1)
x1
x1+50000
x1-50000
which(mat$X1 > 32890000)
which(mat$X1 > 32890000 & mat$X1 <32990000)
which(mat$X1 > 32840000 & mat$X1 <32940000)
head(mat[which(mat$X1 > 32840000 & mat$X1 <32940000),])
head(mat)
tmp = mat[which((mat$X1 < x1+50000 ) & (mat$X1 > x1-50000)),]
tmp
mat[which((mat$X1 < x1+50000 ) & (mat$X1 > x1-50000)),]
tmp = mat[which(mat$X1 < x1+50000  & mat$X1 > x1-50000),]
tmp
x1
x1+50000
x1-50000
which(mat$X1 < x1+50000  & mat$X1 > x1-50000)
which(mat$X1 < x1+50000 )
which(mat$X1 < x1+50000)
mat[which(mat$X1 < x1+50000),]
dim(mat)
mat$X1
which(mat$X1 < x1+50000)
x1
as.numeric(x1)
which(mat$X1 < as.numeric(x1)+50000)
x1 = as.numeric(a[i,2])
x2 = as.numeric(a[i,4])
x1
x2
x2 = as.numeric(a[i,5])
x2
tmp = mat[which(mat$X1 < x1+50000  & mat$X1 > x1-50000),]
tmp[]
tmp
tmp = mat %>%  select( X1 < x1+50000 & X1 > x1-50000 )
head(mat)
tmp = mat %>%  select( X1 < x1+50000 & X1 > x1-50000 )
tmp = mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 )
dim(tmp)
tmp = mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 & X2 < x2+50000  & X1 > x2-50000)
tmp
x2
x2-50000
mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 )
mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 & X2 < x2+50000)
tmp = mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 & X2 < x2+50000  & X2 > x2-50000)
tmp
tmp2 = tmp %>% mutate(X1I = floor(X1-x1)/1e4) &>% mutate(X2I = floor(X2-x2)/1e4)
tmp2 = tmp %>% mutate(X1I = floor(X1-x1)/1e4) %>% mutate(X2I = floor(X2-x2)/1e4)
tmp2
head(a)
a = a[which(a$chr1 != a$chr2),]
head(a)
x1 = as.numeric(a[i,2])
x2 = as.numeric(a[i,5])
chr1 = as.numeric(sub("chr","",a[i,1]))
chr2 = as.numeric(sub("chr","",a[i,4]))
chr1
chr2
mat = chr_list[[ chr1 ]][[ chr2 ]]
tmp = mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 & X2 < x2+50000  & X2 > x2-50000)
tmp2 = tmp %>% mutate(X1I = floor(X1-x1)/1e4) %>% mutate(X2I = floor(X2-x2)/1e4)
tmp2
tmp1
tmp
tmp2
out_dict = list()
for (i in 1:nrow(a)){
print(i)
x1 = as.numeric(a[i,2])
x2 = as.numeric(a[i,5])
chr1 = as.numeric(sub("chr","",a[i,1]))
chr2 = as.numeric(sub("chr","",a[i,4]))
mat = chr_list[[ chr1 ]][[ chr2 ]]
tmp = mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 & X2 < x2+50000  & X2 > x2-50000)
tmp2 = tmp %>% mutate(X1I = floor(X1-x1)/1e4) %>% mutate(X2I = floor(X2-x2)/1e4)
if (nrow(tmp2)>0) { out_dict[[length(out_dict)+1]] = tmp2 }
}
i
print(i)
x1 = as.numeric(a[i,2])
x2 = as.numeric(a[i,5])
chr1 = as.numeric(sub("chr","",a[i,1]))
chr2 = as.numeric(sub("chr","",a[i,4]))
a[i,]
tail(a)
if (chr2 != "X") { chr2 = as.numeric(chr2) }
chr2 = sub("chr","",a[i,4])
if (chr2 != "X") { chr2 = as.numeric(chr2) }
mat = chr_list[[ chr1 ]][[ chr2 ]]
tmp = mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 & X2 < x2+50000  & X2 > x2-50000)
tmp2 = tmp %>% mutate(X1I = floor(X1-x1)/1e4) %>% mutate(X2I = floor(X2-x2)/1e4)
tmp2
i
i=1
x1 = as.numeric(a[i,2])
x2 = as.numeric(a[i,5])
chr1 = as.numeric(sub("chr","",a[i,1]))
chr2 = sub("chr","",a[i,4])
if (chr2 != "X") { chr2 = as.numeric(chr2) }
mat = chr_list[[ chr1 ]][[ chr2 ]]
tmp = mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 & X2 < x2+50000  & X2 > x2-50000)
tmp2 = tmp %>% mutate(X1I = floor(X1-x1)/1e4) %>% mutate(X2I = floor(X2-x2)/1e4)
tmp2
a[i,]
tmp2 = tmp %>% mutate(X1I = floor(X1-x1)/1e4) %>% mutate(X2I = floor(X2-x2)/1e4) %>% mutate(Index=i)
tmp2
out_dict = list()
for (i in 1:nrow(a)){
print(i)
x1 = as.numeric(a[i,2])
x2 = as.numeric(a[i,5])
chr1 = as.numeric(sub("chr","",a[i,1]))
chr2 = sub("chr","",a[i,4])
if (chr2 != "X") { chr2 = as.numeric(chr2) }
mat = chr_list[[ chr1 ]][[ chr2 ]]
tmp = mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 & X2 < x2+50000  & X2 > x2-50000)
tmp2 = tmp %>% mutate(X1I = floor(X1-x1)/1e4) %>% mutate(X2I = floor(X2-x2)/1e4) %>% mutate(Index=i)
if (nrow(tmp2)>0) { out_dict[[length(out_dict)+1]] = tmp2 }
}
###
library(parallel)
###
library(doParallel)
registerDoParallel(30)
#for (i in 1:nrow(a)){
out_dict = foreach(i=1:nrow(a)) %dopar% {
print(i)
x1 = as.numeric(a[i,2])
x2 = as.numeric(a[i,5])
chr1 = as.numeric(sub("chr","",a[i,1]))
chr2 = sub("chr","",a[i,4])
if (chr2 != "X") { chr2 = as.numeric(chr2) }
mat = chr_list[[ chr1 ]][[ chr2 ]]
tmp = mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 & X2 < x2+50000  & X2 > x2-50000)
tmp2 = tmp %>% mutate(X1I = floor(X1-x1)/1e4) %>% mutate(X2I = floor(X2-x2)/1e4) %>% mutate(Index=i)
}
dim(a)
for (i in 1:nrow(a)){
#out_dict = foreach(i=1:nrow(a)) %dopar% {
print(i)
x1 = as.numeric(a[i,2])
x2 = as.numeric(a[i,5])
chr1 = as.numeric(sub("chr","",a[i,1]))
chr2 = sub("chr","",a[i,4])
if (chr2 != "X") { chr2 = as.numeric(chr2) }
mat = chr_list[[ chr1 ]][[ chr2 ]]
tmp = mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 & X2 < x2+50000  & X2 > x2-50000)
tmp2 = tmp %>% mutate(X1I = floor(X1-x1)/1e4) %>% mutate(X2I = floor(X2-x2)/1e4) %>% mutate(Index=i)
#}
if (nrow(tmp2)>0) { out_dict[[length(out_dict)+1]] = tmp2 }
}
out_dict = list()
for (i in 1:nrow(a)){
#out_dict = foreach(i=1:nrow(a)) %dopar% {
print(i)
x1 = as.numeric(a[i,2])
x2 = as.numeric(a[i,5])
chr1 = as.numeric(sub("chr","",a[i,1]))
chr2 = sub("chr","",a[i,4])
if (chr2 != "X") { chr2 = as.numeric(chr2) }
mat = chr_list[[ chr1 ]][[ chr2 ]]
tmp = mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 & X2 < x2+50000  & X2 > x2-50000)
tmp2 = tmp %>% mutate(X1I = floor(X1-x1)/1e4) %>% mutate(X2I = floor(X2-x2)/1e4) %>% mutate(Index=i)
#}
if (nrow(tmp2)>0) { out_dict[[length(out_dict)+1]] = tmp2 }
}
chr1
chr2
x1 = as.numeric(a[i,2])
x2 = as.numeric(a[i,5])
chr1 = as.numeric(sub("chr","",a[i,1]))
chr2 = sub("chr","",a[i,4])
if (chr2 != "X") { chr2 = as.numeric(chr2) }
mat = chr_list[[ chr1 ]][[ chr2 ]]
chr_list[[chr1]]
chr2
length(chr_list[[chr1]])
chr_list[[chr1]][["22"]]
chr_list[[chr1]][["1"]]
chr_list[["1"]][["1"]]
length(chr_list)
length(chr_list[["1"]])
length(chr_list[["2"]])
length(chr_list[["3"]])
x1 = as.numeric(a[i,2])
x2 = as.numeric(a[i,5])
chr1 = as.numeric(sub("chr","",a[i,1]))
chr2 = sub("chr","",a[i,4])
mat = chr_list[[ chr1 ]][[ chr2 ]]
tmp = mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 & X2 < x2+50000  & X2 > x2-50000)
tmp2 = tmp %>% mutate(X1I = floor(X1-x1)/1e4) %>% mutate(X2I = floor(X2-x2)/1e4) %>% mutate(Index=i)
as.character((1:22))
out_dict = list()
for (i in 1:nrow(a)){
#out_dict = foreach(i=1:nrow(a)) %dopar% {
print(i)
x1 = as.numeric(a[i,2])
x2 = as.numeric(a[i,5])
chr1 = as.numeric(sub("chr","",a[i,1]))
chr2 = sub("chr","",a[i,4])
#  if (chr2 != "X") { chr2 = as.numeric(chr2) }
mat = chr_list[[ chr1 ]][[ chr2 ]]
tmp = mat %>%  filter( X1 < x1+50000 & X1 > x1-50000 & X2 < x2+50000  & X2 > x2-50000)
tmp2 = tmp %>% mutate(X1I = floor(X1-x1)/1e4) %>% mutate(X2I = floor(X2-x2)/1e4) %>% mutate(Index=i)
#}
if (nrow(tmp2)>0) { out_dict[[length(out_dict)+1]] = tmp2 }
}
dim(out_dict)
length(out_dict)
out = do.call(rbind, out_dict)
dim(out)
head(out)
summ = aggregate(X3~X1I+X2I,out)
summ = aggregate(X3~X1I+X2I,out,sum)
summ
summ$norm = scale(summ$X3)
summ
ggplot(summ) + geom_tile(aes(x=X1I,y=X2I,fill=X3))
ggplot(summ) + geom_tile(aes(x=X1I,y=X2I,fill=norm))
ggplot(summ) + geom_tile(aes(x=X1I,y=X2I,fill=norm)) +
scale_fill_gradient2()
ggplot(summ) + geom_tile(aes(x=X1I,y=X2I,fill=norm)) +
scale_fill_gradient2(low="darkblue",high="red")
dev.off()
pdf("figures/interchrom_interaction.HERVH.pdf",height=4,width=4)
ggplot(summ) + geom_tile(aes(x=X1I,y=X2I,fill=norm)) +
scale_fill_gradient2(low="darkblue",high="red")
dev.off()
rna = data.frame(fread('../../data/rnaseq/gene.rpkm.edger.txt'))
dim(rna)
rna$D00 = (rna$D00_1+rna$D00_2)/2
rna$D02 = (rna$D02_1+rna$D02_2)/2
a=unique(read.delim("hervh_regulated_gene_TADs/5p_TAD.overlap_genes.txt",header=F,stringsAsFactors=F)$V7)
dim(a)
head(a)
length(a)
m1 = rna[which(rna$Geneid %in% a),]
dim(m1)
head(m1)
head(rna)
b=unique(read.delim("hervh_regulated_gene_TADs/3p_TAD.overlap_genes.txt",header=F,stringsAsFactors=F)$V7)
m2= rna[which(rna$Geneid %in% b),]
b=unique(read.delim("hervh_regulated_gene_TADs/3p_TAD.overlap_genes.txt",header=F,stringsAsFactors=F)$V7)
m2= rna[which(rna$Geneid %in% b),]
install.packages('Seurat')
install.packages("hdf5r")
install.packages("hdf5r")
install.packages("hdf5r")
install.packages("hdf5r")
?install.packages
source("https://bioconductor.org/biocLite.R")
biocLite("hdf5r")
install.packages("hdf5r")
knitr::opts_chunk$set(
tidy = TRUE,
tidy.opts = list(width.cutoff = 120),
message = FALSE,
warning = FALSE
)
library(dplyr)
library(Seurat)
